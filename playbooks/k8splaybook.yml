- hosts: K8s_Servers
  any_errors_fatal: true
  become: yes
  tasks:
   - name: prepare
     shell: " {{ item }}"
     with_items:
      - hostnamectl set-hostname master-node
      - echo 192.168.0.110 master-node >> /etc/hosts
      - echo 192.168.0.111 worker-node-1 >> /etc/hosts
      - echo 192.168.0.112  worker-node-2 >> /etc/hosts

   - name: Install yum-utils
     yum:
      name: yum-utils
      state: present
            
   - name: Add Docker Repository
     ansible.builtin.command: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
   
   - name: Add Kubernetes Repository
     yum_repository:
      name: kubernetes
      description: Kubernetes
      enabled: true
      gpgcheck: true
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg   
               
   - name: install packages
     yum:
      name: 
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose-plugin
        - kubelet
        - kubeadm
        - kubectl
      state: present
              
   - name: Docker run 
     shell: " {{ item }}"
     with_items:
      - systemctl start kubelet && systemctl enable --now kubelet
      - systemctl start docker && systemctl enable docker

   - name: Disable SELinux and update firewall rules 
     shell: " {{ item }}"
     with_items:
      - sudo setenforce 0
      - sudo sed -i "s/^SELINUX=enforcing$/SELINUX=permissive/" /etc/selinux/config
      - swapoff -a

   - name: Update firewall rules for master
     shell: " {{ item }}"
     with_items:
      - firewall-cmd --permanent --add-port=6443/tcp
      - firewall-cmd --permanent --add-port=2379-2380/tcp
      - firewall-cmd --permanent --add-port=10250/tcp
      - firewall-cmd --permanent --add-port=10251/tcp
      - firewall-cmd --permanent --add-port=10252/tcp
      - firewall-cmd --permanent --add-port=10255/tcp
      - firewall-cmd --reload
      - modprobe br_netfilter
      - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
     when: inventory_hostname in groups['k8s-master']

   - name: Update firewall rules for worker
     shell: " {{ item }}"
     with_items:
      - firewall-cmd --permanent --add-port=6783/tcp
      - firewall-cmd --permanent --add-port=10250/tcp
      - firewall-cmd --permanent --add-port=10255/tcp
      - firewall-cmd --permanent --add-port=30000-32767/tcp
      - firewall-cmd  --reload
      - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
     when: inventory_hostname in groups['K8s_workers']

   

   - name: rm cont
     ansible.builtin.command: "sudo rm /etc/containerd/config.toml"
     ignore_errors: yes
     when: inventory_hostname in groups['k8s-master']
     
   - name: ser cont
     ansible.builtin.command: "sudo systemctl restart containerd"
     when: inventory_hostname in groups['k8s-master']
     
   - name: kubectl apply
     ansible.builtin.command: "sudo kubeadm init --apiserver-advertise-address=192.168.0.110 --pod-network-cidr=10.244.0.0/16"
     register: output
     ignore_errors: yes
     when: inventory_hostname in groups['k8s-master']

   - name: Print output
     debug:
      var: output.stdout
     when: inventory_hostname in groups['k8s-master']
    
   - name: kubectl apply
     ansible.builtin.shell: " {{ item }}"
     with_items:
      - "mkdir -p $HOME/.kube"
      - "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
      - "sudo chown $(id -u):$(id -g) $HOME/.kube/config"
      - "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
     when: inventory_hostname in groups['k8s-master']




